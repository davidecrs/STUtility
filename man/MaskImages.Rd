% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/image_processing.R
\name{MaskImages}
\alias{MaskImages}
\alias{MaskImages.Staffli}
\alias{MaskImages.Seurat}
\title{Image masking}
\usage{
MaskImages(object, thresholding = FALSE, iso.blur = 2,
  channels.use = NULL, compactness = 1, add.contrast = NULL,
  verbose = FALSE, custom.msk.fkn = NULL)

\method{MaskImages}{Staffli}(object, thresholding = TRUE, iso.blur = 2,
  channels.use = NULL, compactness = 1, add.contrast = NULL,
  verbose = FALSE, custom.msk.fkn = NULL, ...)

\method{MaskImages}{Seurat}(object, thresholding = TRUE, iso.blur = 2,
  channels.use = NULL, compactness = 1, add.contrast = NULL,
  verbose = FALSE, custom.msk.fkn = NULL, ...)
}
\arguments{
\item{object}{Seurat or Staffli object o pre-procesing step [default: TRUE]}

\item{thresholding}{Applies thresholding step}

\item{iso.blur}{Sets the level of smoothing in the pre-procesing step [default: 2]}

\item{channels.use}{Select channel to use for masking [default: 1 for '1k' and '2k' platforms and 1:3 for 'Visium' platform]}

\item{compactness}{Scales the number of super-pixels [default: 1]}

\item{add.contrast}{Add contrast to pre-procesing step [default: TRUE platforms and 1:3 for FALSE for 'Visium' platform]}

\item{verbose}{Print messages}

\item{custom.msk.fkn}{Custom masking function that takes an image of class "cimg" as input and returns a mask
of class "pixset" outlining the tissue area.}
}
\value{
A Seurat object with masked HE images

A Staffli object

A Seurat object
}
\description{
Masks the background of a tissue section in HE images
}
\details{
The masking method provided uses the SLIC method; Simple Linear Iterative Clustering (for more info, see
\url{https://www.r-bloggers.com/superpixels-in-imager/}). This algorithm generates superpixels by
clustering pixels based on their color similarity and proximity in the image plane.
Before running the SLIC method on the HE images we have noticed that some pre-processing can improve the
masking significantly.
First of all, a thresholding is applied to the image using a variant of Otsu's method (see \code{\link[imager]{threshold}}.
Thereafter, you can select which color channels to use for the masking. it can be beneficial to remove 1 or two color channels from the image
using \code{channels.use}. Specifying \code{channels.use = 1} will keep only the first channel before running SLIC.
The next step is to apply some blurring efect on the image to "smooth" out speckles in the image. This
"smoothing" effect can be adjusted with \code{iso.blur}, where a higher \code{iso.blur} leads to more smoothing.
The compactness will adjust the number of superpixels to compute. If you double this number you will get twice
as many superpixels. This can sometimes be helpful to get a finer sensitivity of the masking.
}
\section{Custom mask function}{

Masking can sometimes very difficult to accomplish without cutting off parts of the tissue or
including unwanted parts of the tissue. If the masking fails you also have the option to
write your own function that takes a "cimg" class image as input and returns a masked "pxset".
}

\examples{
# Create a new Staffli object, mask and plot images
st.obj <- CreateStaffliObject(imgs, meta.data)
st.obj <- LoadImages(st.obj, verbose = TRUE) \%>\% MaskImages()
plot(st.obj)


# Load images into a Seurat objectm, mask and plot images
se <- LoadImages(se, verbose = TRUE) \%>\% MaskImages()
ImagePlot(se)
}
